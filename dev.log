1/13/2021
- Collision
-- AABB - AABB collision. 
-- [X] Get object size in draw3d render
-- [X] return player position from camera class
--- possibly can use hard coded player pill size?

- Need to create a game object class that has virtual void to render so we can
  hold object data

- Also need to fix camera still....

1/14/2021
- [x] create game object class
-- [x] header file done
-- [X] src file
-- generic game object class with position, size information and render
-- other specific objects inheret

1/23/2021
- I guess the easiest collision is AABB. Some for method to check collision
- with game objects specifically. Later use some level mesh?
- [X] We should probably update the view matrix in game update instead of having it
  as a draw3d argument
- Continuing work on collision, got most of the framework figured out
- renamed the direction enums to separate for camera and collision
- [] Finish DoCollision func in game class
- [] think about how level and gameobjects will be placed

1/24/2021
- [x] CheckCollision func finished
- [] Do collision partially done, need to implement a way to find direction of
  collision and player position = collision object.size to prevent from
  intersecting

1/25/2021
- For the collision, would prob take the center of obj 1 difference center of
  obj2 to get the vector of collision. then to stop moving you just stop
  movement in that direction some how...

1/26/2021
- [x] Finally got a rudimentary collision detection system that prevents player
  movement
- [] Need to clean it up a bit and generalize to more objects

1/30/2021
+ Collision fixed. It was because AABB collision assumes the position is
comparing top left to top left coordinate. The rendering currently has postion
then scale so need to find top left manually. 
